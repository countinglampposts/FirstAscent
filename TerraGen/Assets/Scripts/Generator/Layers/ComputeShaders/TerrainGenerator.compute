// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Generate

#include "Assets/Scripts/Generator/Layers/ComputeShaders/PreMutator.compute"
#include "Assets/Scripts/Generator/Layers/ComputeShaders/LatticeMutator.compute"
#include "Assets/Scripts/Generator/Layers/ComputeShaders/PostMutator.compute"
#include "Assets/Scripts/Generator/Layers/ComputeShaders/Perlin.compute"
#include "Assets/Scripts/Generator/Layers/ComputeShaders/Falloff.compute"

RWStructuredBuffer<float> heightMap;
RWStructuredBuffer<int> minMax;
int mapSize;

void SaveMinMax(float height){
    int val = height * 1000;
    InterlockedMin(minMax[0], val);
    InterlockedMax(minMax[1], val); 
}

[numthreads(1,1,1)]
void Generate (uint3 id : SV_DispatchThreadID)
{
    float2 pos = float2(id.x % mapSize, id.x / mapSize);
    
    pos = PreMutate(pos);
    pos = LatticeMutate(pos);
    pos = PostMutate(pos);
    
    heightMap[id.x] = Perlin(pos, heightMap[id.x]);
    heightMap[id.x] = Falloff(pos, heightMap[id.x]);
    SaveMinMax(heightMap[id.x]);
}